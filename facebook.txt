buildscript{
	repositories {
		jcenter()
	}
}
dependencies {
	implementation 'com.facebook.android:facebook-android-sdk:5.0.0'
}
<string name="facebook_app_id">[APP_ID]</string>
<string name="fb_login_protocol_scheme">fb[APP_ID]</string>
<meta-data
	android:name="com.facebook.sdk.ApplicationId"
	android:value="@string/facebook_app_id"/>
<activity
	android:name="com.facebook.FacebookActivity"
	android:configChanges="keyboard|keyboardHidden
						|screenLayout|screenSize
						|orientation"
	android:label="@string/app_name" />
@Override
protected void onCreate(Bundle savedInstanceState)
{
	super.onCreate(savedInstanceState);
	setContentView(R.layout.activity_login);

	... printHashKey();
	...
}

...

	public void
	printHashKey()
{

	// Add code to print out the key hash
	try {

		PackageInfo info
			= getPackageManager().getPackageInfo(
				"com.android.facebookloginsample",
				PackageManager.GET_SIGNATURES);

		for (Signature signature : info.signatures) {

			MessageDigest md
				= MessageDigest.getInstance("SHA");
			md.update(signature.toByteArray());
			Log.d("KeyHash:",
				Base64.encodeToString(
					md.digest(),
					Base64.DEFAULT));
		}
	}

	catch (PackageManager.NameNotFoundException e) {
	}

	catch (NoSuchAlgorithmException e) {
	}
}
<Button
	android:id="@+id/button_facebook"
	style="@style/FacebookLoginButton"
	android:layout_width="match_parent"
	android:layout_height="45dp"
	android:layout_gravity="center_horizontal"
	android:layout_marginTop="15dp"
	android:text="Continue With Facebook"
	android:textAllCaps="false"
	android:textColor="@android:color/white" />
<style name="FacebookLoginButton">
	<item name="android:textSize">14sp</item>
	<item name="android:background">@drawable/facebook_signin_btn</item>
	<item name="android:paddingTop">11dp</item>
	<item name="android:paddingBottom">11dp</item>
	<item name="android:paddingLeft">15dp</item>
	<item name="android:layout_marginLeft">3dp</item>
	<item name="android:layout_marginRight">3dp</item>
	<item name="android:layout_height">wrap_content</item>
	<item name="android:layout_gravity">center_horizontal</item>
</style>
<?xml version="1.0" encoding="utf-8"?>
<shape
xmlns:android="http://schemas.android.com/apk/res/android"
android:shape="rectangle">
	<corners android:radius="5dp"/>
	<solid android:color="#3B5998"/>
</shape>
// Declare variables
private Button mButtonFacebook;

private CallbackManager callbackManager;
private LoginManager loginManager;

...

	@Override
	protected void onCreate(Bundle savedInstanceState)
{
	super.onCreate(savedInstanceState);
	setContentView(R.layout.activity_login);

	...

		mButtonFacebook
		= findViewById(R.id.button_facebook);
	FacebookSdk.sdkInitialize(MainActivity.this);
	callbackManager = CallbackManager.Factory.create();
	facebookLogin();

	...

		mButtonFacebook.setOnClickListener(new View.OnClickListener() {
			@Override
			public void onClick(View v)
			{
				loginManager.logInWithReadPermissions(
					MainActivity.this,
					Arrays.asList(
						"email",
						"public_profile",
						"user_birthday"));
			}
		});
	...
}

...
public void facebookLogin()
{

	loginManager
		= LoginManager.getInstance();
	callbackManager
		= CallbackManager.Factory.create();

	loginManager
		.registerCallback(
			callbackManager,
			new FacebookCallback<LoginResult>() {

				@Override
				public void onSuccess(LoginResult loginResult)
				{
					GraphRequest request = GraphRequest.newMeRequest(

						loginResult.getAccessToken(),

						new GraphRequest.GraphJSONObjectCallback() {

							@Override
							public void onCompleted(JSONObject object,
													GraphResponse response)
							{

								if (object != null) {
									try {
										String name = object.getString("name");
										String email = object.getString("email");
										String fbUserID = object.getString("id");

										disconnectFromFacebook();

										// do action after Facebook login success
										// or call your API
									}
									catch (JSONException | NullPointerException e) {
										e.printStackTrace();
									}
								}
							}
						});

					Bundle parameters = new Bundle();
					parameters.putString(
						"fields",
						"id, name, email, gender, birthday");
					request.setParameters(parameters);
					request.executeAsync();
				}

				@Override
				public void onCancel()
				{
					Log.v("LoginScreen", "---onCancel");
				}

				@Override
				public void onError(FacebookException error)
				{
					// here write code when get error
					Log.v("LoginScreen", "----onError: "
											+ error.getMessage());
				}
			});
}
public void disconnectFromFacebook()
{
	if (AccessToken.getCurrentAccessToken() == null) {
		return; // already logged out
	}

	new GraphRequest(
		AccessToken.getCurrentAccessToken(),
		"/me/permissions/",
		null,
		HttpMethod.DELETE,
		new GraphRequest
			.Callback() {
				@Override
				public void onCompleted(GraphResponse graphResponse)
				{
					LoginManager.getInstance().logOut();
				}
			})
		.executeAsync();
}
@Override
protected void onActivityResult(int requestCode,
								int resultCode,
								Intent data)
{

	// add this line
	callbackManager.onActivityResult(
		requestCode,
		resultCode,
		data);

	super.onActivityResult(requestCode,
						resultCode,
						data);
}
